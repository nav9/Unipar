/*
<Unipar. A software that displays a 3D representation of a beam under stress and displays the corresponding graphs>
Copyright (C) <2014>  <Navin Ipe>
Contact: navinipe at gmail dot com

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

union REGS z,o;
initmouse()
{
z.x.ax=0;int86(0x33,&z,&o);return(o.x.ax);
}

showmouse()
{
z.x.ax=1;int86(0x33,&z,&o);
}

hidemouse()
{
z.x.ax=2;int86(0x33,&z,&o);
}

restrictmouse(c,r,x,y)
int c,r,x,y;
{
z.x.ax=7;z.x.cx=c;z.x.dx=x;int86(0x33,&z,&o);z.x.ax=8;z.x.cx=r;z.x.dx=y;int86(0x33,&z,&o);
}

getmousepos(button,x,y)
int *button,*x,*y;
{
z.x.ax=3;int86(0x33,&z,&o);*button=o.x.bx;*x=o.x.cx;*y=o.x.dx;
}

detectclick(b,x,y)
int *b,*x,*y;
{
int button,xpos,ypos;
getmousepos(&button,&xpos,&ypos);
  if (button==1)
     {
      *b=button;
      while (button==1)
	    {
	     getmousepos(&button,&xpos,&ypos);
	     *x=xpos;*y=ypos;
	    }
     }
  if (button==2)
     {
      *b=button;
      while (button==2)
	    {
	     getmousepos(&button,&xpos,&ypos);
	     *x=xpos;*y=ypos;
	    }
     }
}
